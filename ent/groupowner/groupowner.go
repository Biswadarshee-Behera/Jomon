// Code generated by entc, DO NOT EDIT.

package groupowner

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the groupowner type in the database.
	Label = "group_owner"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOwner holds the string denoting the owner field in the database.
	FieldOwner = "owner"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeGroup holds the string denoting the group edge name in mutations.
	EdgeGroup = "group"
	// Table holds the table name of the groupowner in the database.
	Table = "group_owners"
	// GroupTable is the table the holds the group relation/edge.
	GroupTable = "group_owners"
	// GroupInverseTable is the table name for the Group entity.
	// It exists in this package in order to avoid circular dependency with the "group" package.
	GroupInverseTable = "groups"
	// GroupColumn is the table column denoting the group relation/edge.
	GroupColumn = "group_owner"
)

// Columns holds all SQL columns for groupowner fields.
var Columns = []string{
	FieldID,
	FieldOwner,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "group_owners"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"group_owner",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
