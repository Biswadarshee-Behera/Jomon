// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdministratorsColumns holds the columns for the "administrators" table.
	AdministratorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "trap_id", Type: field.TypeString},
	}
	// AdministratorsTable holds the schema information for the "administrators" table.
	AdministratorsTable = &schema.Table{
		Name:        "administrators",
		Columns:     AdministratorsColumns,
		PrimaryKey:  []*schema.Column{AdministratorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CommentsColumns holds the columns for the "comments" table.
	CommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_by", Type: field.TypeString},
		{Name: "comment", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "request_id", Type: field.TypeInt, Nullable: true},
	}
	// CommentsTable holds the schema information for the "comments" table.
	CommentsTable = &schema.Table{
		Name:       "comments",
		Columns:    CommentsColumns,
		PrimaryKey: []*schema.Column{CommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "comments_requests_request",
				Columns:    []*schema.Column{CommentsColumns[6]},
				RefColumns: []*schema.Column{RequestsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FilesColumns holds the columns for the "files" table.
	FilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "mime_type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "request_file_file", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// FilesTable holds the schema information for the "files" table.
	FilesTable = &schema.Table{
		Name:       "files",
		Columns:    FilesColumns,
		PrimaryKey: []*schema.Column{FilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "files_request_files_file",
				Columns:    []*schema.Column{FilesColumns[4]},
				RefColumns: []*schema.Column{RequestFilesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "budget", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:        "groups",
		Columns:     GroupsColumns,
		PrimaryKey:  []*schema.Column{GroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// GroupBudgetsColumns holds the columns for the "group_budgets" table.
	GroupBudgetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "amount", Type: field.TypeInt},
		{Name: "comment", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "group_id", Type: field.TypeInt, Nullable: true},
	}
	// GroupBudgetsTable holds the schema information for the "group_budgets" table.
	GroupBudgetsTable = &schema.Table{
		Name:       "group_budgets",
		Columns:    GroupBudgetsColumns,
		PrimaryKey: []*schema.Column{GroupBudgetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_budgets_groups_group",
				Columns:    []*schema.Column{GroupBudgetsColumns[4]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GroupOwnersColumns holds the columns for the "group_owners" table.
	GroupOwnersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "owner", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "group_id", Type: field.TypeInt, Nullable: true},
	}
	// GroupOwnersTable holds the schema information for the "group_owners" table.
	GroupOwnersTable = &schema.Table{
		Name:       "group_owners",
		Columns:    GroupOwnersColumns,
		PrimaryKey: []*schema.Column{GroupOwnersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_owners_groups_group",
				Columns:    []*schema.Column{GroupOwnersColumns[3]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GroupUsersColumns holds the columns for the "group_users" table.
	GroupUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "group_id", Type: field.TypeInt, Nullable: true},
	}
	// GroupUsersTable holds the schema information for the "group_users" table.
	GroupUsersTable = &schema.Table{
		Name:       "group_users",
		Columns:    GroupUsersColumns,
		PrimaryKey: []*schema.Column{GroupUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_users_groups_group",
				Columns:    []*schema.Column{GroupUsersColumns[3]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RequestsColumns holds the columns for the "requests" table.
	RequestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_by", Type: field.TypeString},
		{Name: "amount", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
	}
	// RequestsTable holds the schema information for the "requests" table.
	RequestsTable = &schema.Table{
		Name:        "requests",
		Columns:     RequestsColumns,
		PrimaryKey:  []*schema.Column{RequestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RequestFilesColumns holds the columns for the "request_files" table.
	RequestFilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "request_id", Type: field.TypeInt, Nullable: true},
	}
	// RequestFilesTable holds the schema information for the "request_files" table.
	RequestFilesTable = &schema.Table{
		Name:       "request_files",
		Columns:    RequestFilesColumns,
		PrimaryKey: []*schema.Column{RequestFilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "request_files_requests_request",
				Columns:    []*schema.Column{RequestFilesColumns[2]},
				RefColumns: []*schema.Column{RequestsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RequestStatusColumns holds the columns for the "request_status" table.
	RequestStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_by", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"submitted", "fix_required", "accepted", "completed", "rejected"}, Default: "submitted"},
		{Name: "reason", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "request_id", Type: field.TypeInt, Nullable: true},
	}
	// RequestStatusTable holds the schema information for the "request_status" table.
	RequestStatusTable = &schema.Table{
		Name:       "request_status",
		Columns:    RequestStatusColumns,
		PrimaryKey: []*schema.Column{RequestStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "request_status_requests_request",
				Columns:    []*schema.Column{RequestStatusColumns[5]},
				RefColumns: []*schema.Column{RequestsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RequestTagsColumns holds the columns for the "request_tags" table.
	RequestTagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "request_id", Type: field.TypeInt, Nullable: true},
	}
	// RequestTagsTable holds the schema information for the "request_tags" table.
	RequestTagsTable = &schema.Table{
		Name:       "request_tags",
		Columns:    RequestTagsColumns,
		PrimaryKey: []*schema.Column{RequestTagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "request_tags_requests_request",
				Columns:    []*schema.Column{RequestTagsColumns[2]},
				RefColumns: []*schema.Column{RequestsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RequestTargetsColumns holds the columns for the "request_targets" table.
	RequestTargetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "target", Type: field.TypeString},
		{Name: "paid_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "request_id", Type: field.TypeInt, Nullable: true},
	}
	// RequestTargetsTable holds the schema information for the "request_targets" table.
	RequestTargetsTable = &schema.Table{
		Name:       "request_targets",
		Columns:    RequestTargetsColumns,
		PrimaryKey: []*schema.Column{RequestTargetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "request_targets_requests_request",
				Columns:    []*schema.Column{RequestTargetsColumns[4]},
				RefColumns: []*schema.Column{RequestsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "request_tag_tag", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "transaction_tag_tag", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tags_request_tags_tag",
				Columns:    []*schema.Column{TagsColumns[6]},
				RefColumns: []*schema.Column{RequestTagsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tags_transaction_tags_tag",
				Columns:    []*schema.Column{TagsColumns[7]},
				RefColumns: []*schema.Column{TransactionTagsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "transaction_detail_transaction", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transactions_transaction_details_transaction",
				Columns:    []*schema.Column{TransactionsColumns[2]},
				RefColumns: []*schema.Column{TransactionDetailsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TransactionDetailsColumns holds the columns for the "transaction_details" table.
	TransactionDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "amount", Type: field.TypeInt, Default: 0},
		{Name: "target", Type: field.TypeString, Default: ""},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "request_id", Type: field.TypeInt, Nullable: true},
		{Name: "group_id", Type: field.TypeInt, Nullable: true},
	}
	// TransactionDetailsTable holds the schema information for the "transaction_details" table.
	TransactionDetailsTable = &schema.Table{
		Name:       "transaction_details",
		Columns:    TransactionDetailsColumns,
		PrimaryKey: []*schema.Column{TransactionDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transaction_details_requests_request",
				Columns:    []*schema.Column{TransactionDetailsColumns[4]},
				RefColumns: []*schema.Column{RequestsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "transaction_details_groups_group",
				Columns:    []*schema.Column{TransactionDetailsColumns[5]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TransactionTagsColumns holds the columns for the "transaction_tags" table.
	TransactionTagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "transaction_id", Type: field.TypeInt, Nullable: true},
	}
	// TransactionTagsTable holds the schema information for the "transaction_tags" table.
	TransactionTagsTable = &schema.Table{
		Name:       "transaction_tags",
		Columns:    TransactionTagsColumns,
		PrimaryKey: []*schema.Column{TransactionTagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transaction_tags_transactions_transaction",
				Columns:    []*schema.Column{TransactionTagsColumns[2]},
				RefColumns: []*schema.Column{TransactionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdministratorsTable,
		CommentsTable,
		FilesTable,
		GroupsTable,
		GroupBudgetsTable,
		GroupOwnersTable,
		GroupUsersTable,
		RequestsTable,
		RequestFilesTable,
		RequestStatusTable,
		RequestTagsTable,
		RequestTargetsTable,
		TagsTable,
		TransactionsTable,
		TransactionDetailsTable,
		TransactionTagsTable,
	}
)

func init() {
	CommentsTable.ForeignKeys[0].RefTable = RequestsTable
	FilesTable.ForeignKeys[0].RefTable = RequestFilesTable
	GroupBudgetsTable.ForeignKeys[0].RefTable = GroupsTable
	GroupOwnersTable.ForeignKeys[0].RefTable = GroupsTable
	GroupUsersTable.ForeignKeys[0].RefTable = GroupsTable
	RequestFilesTable.ForeignKeys[0].RefTable = RequestsTable
	RequestStatusTable.ForeignKeys[0].RefTable = RequestsTable
	RequestTagsTable.ForeignKeys[0].RefTable = RequestsTable
	RequestTargetsTable.ForeignKeys[0].RefTable = RequestsTable
	TagsTable.ForeignKeys[0].RefTable = RequestTagsTable
	TagsTable.ForeignKeys[1].RefTable = TransactionTagsTable
	TransactionsTable.ForeignKeys[0].RefTable = TransactionDetailsTable
	TransactionDetailsTable.ForeignKeys[0].RefTable = RequestsTable
	TransactionDetailsTable.ForeignKeys[1].RefTable = GroupsTable
	TransactionTagsTable.ForeignKeys[0].RefTable = TransactionsTable
}
