// Code generated by entc, DO NOT EDIT.

package group

import (
	"time"
)

const (
	// Label holds the string label denoting the group type in the database.
	Label = "group"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldBudget holds the string denoting the budget field in the database.
	FieldBudget = "budget"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeGroupBudget holds the string denoting the group_budget edge name in mutations.
	EdgeGroupBudget = "group_budget"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the group in the database.
	Table = "groups"
	// GroupBudgetTable is the table the holds the group_budget relation/edge.
	GroupBudgetTable = "group_budgets"
	// GroupBudgetInverseTable is the table name for the GroupBudget entity.
	// It exists in this package in order to avoid circular dependency with the "groupbudget" package.
	GroupBudgetInverseTable = "group_budgets"
	// GroupBudgetColumn is the table column denoting the group_budget relation/edge.
	GroupBudgetColumn = "group_group_budget"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "group_users"
	// UserInverseTable is the table name for the GroupUser entity.
	// It exists in this package in order to avoid circular dependency with the "groupuser" package.
	UserInverseTable = "group_users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "group_user"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "group_owners"
	// OwnerInverseTable is the table name for the GroupOwner entity.
	// It exists in this package in order to avoid circular dependency with the "groupowner" package.
	OwnerInverseTable = "group_owners"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "group_owner"
)

// Columns holds all SQL columns for group fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDescription,
	FieldBudget,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)
